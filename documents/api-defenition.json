{
  "openapi": "3.0.3",
  "info": {
    "title": "Slagg API Definition",
    "description": "This is the API Definition of Slagg :D ",
    "version": "1.0.11"
  },
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "chat",
      "description": "Operations about chatting"
    }
  ],
  "paths": {
    "/api/user": {
      "post": {
        "security": [
          {
            "BearerAuth": [
              "admin"
            ]
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/login": {
      "post": {
        "security": [
          {
            "BearerAuth": [
              "user"
            ]
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/api/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/user/password/{userId}": {
      "put": {
        "security": [
          {
            "BearerAuth": [
              "user"
            ]
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Change password",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "name that need to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/user/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "BearerAuth": [
              "admin"
            ]
          }
        ],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "getUserByName",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/chat/channels": {
      "get": {
        "tags": [
          "chat"
        ],
        "security": [
          {
            "BearerAuth": [
              "user"
            ]
          }
        ],
        "description": "",
        "operationId": "getAllChannels",
        "summary": "Gets all available channels",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChannels"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/connect": {
      "post": {
        "tags": [
          "chat"
        ],
        "security": [
          {
            "BearerAuth": [
              "user"
            ]
          }
        ],
        "description": "",
        "operationId": "connectToChannel",
        "summary": "Connect to channel",
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChannelConnectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "john@company.com"
          },
          "password": {
            "type": "string",
            "example": "GHFKJ83HFGJH (BASE64)"
          }
        },
        "xml": {
          "name": "loginrequest"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "username": {
            "type": "string",
            "example": "john@email.com"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "James"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "permissions": {
            "type": "string",
            "description": "User permission group",
            "format": "string",
            "example": "admin"
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "john@email.com"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "James"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "permissions": {
            "type": "string",
            "description": "User permission group",
            "format": "string",
            "example": "admin"
          }
        }
      },
      "UpdatePasswordRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "12345"
          }
        }
      },
      "GetChannels": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ChannelConnectRequest": {
        "type": "object",
        "properties": {
          "channelId": {
            "type": "integer"
          }
        }
      }
    },
    "requestBodies": {
      "Pet": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": ""
            }
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}